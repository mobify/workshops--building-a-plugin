/*! seesee 0.0.1 (https://github.com/mobify/seesee.git) */
!function(a){if("function"==typeof define&&define.amd)define(["$","plugin"],a);else{var b=window.Zepto||window.jQuery;a(b,window.Plugin)}}(function(a,b){function c(a,b){c.__super__.call(this,a,b,c.DEFAULTS)}var d={SEESEE:"seesee"};return Function.prototype.bind||(Function.prototype.bind=function(a){if("function"!=typeof this)throw new TypeError("Function.prototype.bind - what is trying to be bound is not callable");var b=Array.prototype.slice.call(arguments,1),c=this,d=function(){},e=function(){return c.apply(this instanceof d&&a?this:a,b.concat(Array.prototype.slice.call(arguments)))};return d.prototype=this.prototype,e.prototype=new d,e}),c.VERSION="0.0.1",c.DEFAULTS={},c.classes={INPUT:"seesee__input"},b.create("seesee",c,{_init:function(b){if(this.$element=a(b),!this.$element.is("input"))throw new Error("Seesee must be initialized against elements of type input");this.$element.addClass(d.SEESEE).attr("type","tel"),this.currentClass="",this._bindEvents()},destroy:function(){this.$element.removeData(this.name)},_bindEvents:function(){this.$element.on("keypress",this._restrictNumeric.bind(this)).on("keypress",this._restrictLength.bind(this)).on("keyup",this._formatCard.bind(this)).on("keyup",this._identifyType.bind(this))},_restrictNumeric:function(){},_formatCard:function(){},_identifyType:function(){}}),a});